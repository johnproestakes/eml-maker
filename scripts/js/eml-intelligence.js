EMLMaker.intelligence.module("email").register("email-no-links-found",["EMLWorkspace",function(e){var i=e.hasOwnProperty("linkData")&&0==e.linkData.length;return{id:"did-not-find-links",title:"Did not find any links",description:"Although you can export your EML without links, if you intended to     include links, you'll want to go back and make sure you've included some.     Adding links to your email campaign or newsletter helps to engage     your audience and drive traffic to your site.",type:ErrorType.Warn,severity:ErrorSeverity.High,canContinue:!0,when:function(){return i}}}]),EMLMaker.intelligence.module("email").register("email-qa-email-addresses",["EMLWorkspace","IntelligenceMonitor",function(e,i){var t=e.generateOutputCode("email",!0),n=[];if(GlobalVars.EmailRegex.test(t)){var r;do r=GlobalVars.EmailRegexGlobal.exec(t),r&&n.push(r[0]);while(r)}return{id:"confrim-contact-email-addresses",title:"Confirm correct contact information - Email address"+(n.length>1?"es":""),description:"<em>Review:</em> "+n.join(", "),type:ErrorType.QA,severity:ErrorSeverity.Medium,canContinue:!1,cta:{label:"",handler:function(){i.overridden.push("confrim-contact-email-addresses"),e.intelligence.evaluateRules()}},when:function(){return n.length>0}}}]),EMLMaker.intelligence.module("email").register("email-qa-telelphone-numbers",["EMLWorkspace","IntelligenceMonitor",function(e,i){var t=e.generateOutputCode("email",!0),n=[];if(GlobalVars.TelephoneRegex.test(t)){var r;do r=GlobalVars.TelephoneRegexGlobal.exec(t),r&&n.push(r[0]);while(r)}return{id:"confrim-telephone-numbers",title:"Confirm correct contact information - Telephone Number"+(n.length>1?"s":""),description:"<em>Review:</em> "+n.join(", "),type:ErrorType.QA,severity:ErrorSeverity.Medium,canContinue:!0,cta:{label:"",handler:function(){i.overridden.push("confrim-telephone-numbers"),e.intelligence.evaluateRules()}},when:function(){return n.length>0}}}]),EMLMaker.intelligence.module("email").register("email-zoom-fix-code",["EMLWorkspace",function(e){return{id:"zoom-fix-code-not-detected",title:"Zoom fix code not detected",description:"Your email might not display correctly in MS Outlook on Windows 10 or displays with resolutions set higher than 96 pixels per inch",type:ErrorType.BestPractice,severity:ErrorSeverity.High,canContinue:!0,cta:{label:"",handler:function(){}},when:function(){var i=!1,t=e.generateOutputCode("email",!0);return["<o:OfficeDocumentSettings","<o:AllowPNG","<o:PixelsPerInch"].forEach(function(e){var n=new RegExp(e,"gi");n.test(t)||(i=!0)}),i}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-alt-tag-required",["LinkObject",function(e){return{title:"ALT tag on image required",description:"Linked image should have an ALT tag.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return e.LinkedImage&&(void 0===e.LinkedImage.alt||""==e.LinkedImage.alt)}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-duplicate-query-strings",["LinkObject",function(e){var i,t=e.hasDuplicateQueryStrings();return t.length>0&&(i=t.join()),{title:"Duplicate query strings",description:"It looks like you have duplicate query strings.     When you have duplicate parameters, only one will be valid,     so make sure to remove the incorrect or duplicate parameters.     Pay attention to these parameters: "+i,type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:"Open editor",handler:function(){e.showQueryStringEditor=!0}},when:function(){return e["new"].searchParams.entries.length>0&&t}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-image-relative-path",["LinkObject",function(e){return{title:"Linked image URL is relative",description:"The image is probably stored on your computer or the image is broken.     Images in emails should only be referenced by absolute URLs.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return e.LinkedImage&&!/^http/.test(e.LinkedImage.src)}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-image-size-props",["LinkObject",function(e){var i=[],t="",n=!0;if(e.LinkedImage){var r=e.context.match(/\<img([^>].*?)\>/);r.length>0&&(/height\=\"[0-9]{1,5}\"/g.test(r[0])||i.push("height"),/width\=\"[0-9]{1,5}\"/g.test(r[0])||i.push("width")),i.length>0&&(n=!1,t=void 0==e.LinkedImage.height||void 0==e.LinkedImage.width?"<em>Will be calculated based on linked image's actual size when you push the button.</em>":"height="+e.LinkedImage.height+" width="+e.LinkedImage.width)}return{title:"Images require explicitly defined size properities",description:"This image does not have an explicitly defined "+i.join(" or ")+" property.     Make sure the code is updated or there may be display or layout issues. ",suggestion:t,type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:"Update to calculated size",handler:function(){for(var t=0;t<i.length;t++)e.context=e.context.replace(/\<img/g,"<img "+i[t]+'="'+e.LinkedImage[i[t]]+'"');e.isLinkComplete()}},when:function(){return!n}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-image-size",["LinkObject",function(e){var i,t,n=!1;return e.LinkedImage&&e.LinkedImage.width&&e.LinkedImage.height&&(i=e.LinkedImage.width,t=e.LinkedImage.height,(parseInt(e.LinkedImage.width)<44||parseInt(e.LinkedImage.height)<44)&&(n=!0)),{title:"Linked image might be too small",description:(n?"The linked image is <strong>"+i+"x"+t+"px</strong>. ":"")+"Generally, youâ€™ll want to keep calls-to-action big enough for even large thumbs to easily tap.     Apple suggests making touch targets at least 44 pixels square.     Smaller images may be a problem for touch screen devices, particularly those with high screen resolutions.",type:ErrorType.BestPractice,severity:ErrorSeverity.High,resource:"https://www.lukew.com/ff/entry.asp?1085",canContinue:!0,when:function(){return n}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-is-valid-mailto",["LinkObject",function(e){return{title:"Invalid email address",description:"Fix invalid email address.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return e.isLinkType("mailto")&&e.mailto.has("email")&&!e.mailto.isValidEmailAddress()}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-is-valid-url",["LinkObject",function(e){return{title:"Invalid URL",description:"This is not a valid URL",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return!e.isLinkType("mailto")&&!e["new"].isValid()}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-jump-links",["LinkObject",function(e){return{title:"Jumplinks in Emails",description:"It looks like you're trying to send traffic to a\n    <em>Jump link</em> AKA <em>Anchor link</em>. The only\n    time that is acceptible is when the destination is on\n    the same page. You see, the assumption is that all the content is\n    loaded, but when you click from an email into another page with a\n    jump link, you're sending someone to a loading page. The page may or\n    may not send them to the location you're intending, or there\n    may be an awkward user experience.",type:ErrorType.Suggestion,severity:ErrorSeverity.Low,canContinue:!0,cta:{label:'<i class="wizard icon"></i> Fix it',handler:function(){e["new"].hash="",e.isLinkComplete(),window.ga("send","event","Suggestion","Remove Anchor Link","Remove Anchor Link")}},when:function(){return""!==e["new"].hash&&"#"!==e["new"].hash}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-mailto-link-matches-context",["LinkObject",function(e){return{title:"Looks like your label doesn't match the email address.",description:"It looks like you have a link to an email address that does not match the link label. This is misleading and could be confusing, so you need to make sure that they match.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:'<i class="wizard icon"></i>Update label',handler:function(){e.context=e.context.replace(/\>(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))\<\//g,">"+e.mailto.email+"</"),e._super.overriddenIds.indexOf("custom-confrim-contact-email-addresses")>-1&&e._super.overriddenIds.splice(e._super.overriddenIds.indexOf("custom-confrim-contact-email-addresses"),1),e.isLinkComplete(),window.ga("send","event","Fix","Update label",e._super._defaultSCode)}},when:function(){return e.isLinkType("mailto")&&function(){var i=window.jQuery(e.context).text().trim();return i.indexOf("@")>-1&&e.mailto.email!==i.substr(0,e.mailto.email.length)}()}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-mailto-subject-line",["LinkObject",function(e){return{title:"Always include a subject line.",description:"You can add a subject line using the Editor button.",type:ErrorType.BestPractice,severity:ErrorSeverity.Medium,canContinue:!0,cta:{label:'<i class="wizard icon"></i> Open Editor',handler:function(){e.mailto.openEditor(),window.ga("send","event","Best Practice","Add subject line","Add subject line")}},when:function(){return e.isLinkType("mailto")&&!e.mailto.has("subject")}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-missing-content",["LinkObject",function(e){var i=!(0!=window.jQuery(e.context).find("img").length||""!=window.jQuery(e.context).text().trim()||e.hasOwnProperty("deleteOnRender")&&e.deleteOnRender);return{title:"Missing content",description:"This link doesn't contain any text or image.\n    This might be a mistake; you can remove it\n    from the code, or by clicking the button to the\n    right, and this link will be removed when you export the code.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:'<i class="trash icon"></i> Remove link',handler:function(){e["new"].url="",e.deleteOnRender=!0,e.isLinkComplete()}},when:function(){return i}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-remove-title-tag",["LinkObject",function(e){return{title:"Remove title tag",description:"Links in emails shouldn't use title tags. This causes issues with accessibility for screen readers, but also can misrepresent links.",type:ErrorType.BestPractice,severity:ErrorSeverity.Medium,canContinue:!0,when:function(){return GlobalVars.LinkHasTitleTagRegexGlobal.test(e.context)}}}]);
//# sourceMappingURL=data:application/json;base64,
