EMLIntelligence.module("email").register("email-no-links-found",["EMLWorkspace",function(e){return{id:"did-not-find-links",title:"Did not find any links",description:"Although you can export your EML without links, if you intended to     include links, you'll want to go back and make sure you've included some.     Adding links to your email campaign or newsletter helps to engage     your audience and drive traffic to your site.",type:ErrorType.Warn,severity:ErrorSeverity.High,canContinue:!0,when:function(){return 0==e.linkData.length}}}]),EMLIntelligence.module("email").register("email-qa-email-addresses",["EMLWorkspace","IntelligenceMonitor",function(e,i){var n=e.generateOutputCode("email",!0),t=[];if(GlobalVars.EmailRegex.test(n)){var r;do r=GlobalVars.EmailRegexGlobal.exec(n),r&&t.push(r[0]);while(r)}return{id:"confrim-contact-email-addresses",title:"Confirm correct contact information - Email address"+(t.length>1?"es":""),description:"<em>Review:</em> "+t.join(", "),type:ErrorType.QA,severity:ErrorSeverity.Medium,canContinue:!1,cta:{label:"",handler:function(){i.overridden.push("confrim-contact-email-addresses"),e.intelligence.evaluateRules()}},when:function(){return t.length>0}}}]),EMLIntelligence.module("email").register("email-qa-telelphone-numbers",["EMLWorkspace","IntelligenceMonitor",function(e,i){var n=e.generateOutputCode("email",!0),t=[];if(GlobalVars.TelephoneRegex.test(n)){var r;do r=GlobalVars.TelephoneRegexGlobal.exec(n),r&&t.push(r[0]);while(r)}return{id:"confrim-telephone-numbers",title:"Confirm correct contact information - Telephone Number"+(t.length>1?"s":""),description:"<em>Review:</em> "+t.join(", "),type:ErrorType.QA,severity:ErrorSeverity.Medium,canContinue:!0,cta:{label:"",handler:function(){i.overridden.push("confrim-telephone-numbers"),e.intelligence.evaluateRules()}},when:function(){return t.length>0}}}]),EMLIntelligence.module("email").register("email-zoom-fix-code",["EMLWorkspace",function(e){return{id:"zoom-fix-code-not-detected",title:"Zoom fix code not detected",description:"Your email might not display correctly in MS Outlook on Windows 10 or displays with resolutions set higher than 96 pixels per inch",type:ErrorType.BestPractice,severity:ErrorSeverity.High,canContinue:!0,cta:{label:"",handler:function(){}},when:function(){var i=!1,n=e.generateOutputCode("email",!0);return["<o:OfficeDocumentSettings","<o:AllowPNG","<o:PixelsPerInch"].forEach(function(e){var t=new RegExp(e,"gi");t.test(n)||(i=!0)}),i}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-alt-tag-required",["LinkObject",function(e){return{title:"ALT tag on image required",description:"Linked image should have an ALT tag.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return e.LinkedImage&&(void 0===e.LinkedImage.alt||""==e.LinkedImage.alt)}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-duplicate-query-strings",["LinkObject",function(e){var i,n=e.hasDuplicateQueryStrings();return n.length>0&&(i=n.join()),{title:"Duplicate query strings",description:"It looks like you have duplicate query strings.     When you have duplicate parameters, only one will be valid,     so make sure to remove the incorrect or duplicate parameters.     Pay attention to these parameters: "+i,type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:"Open editor",handler:function(){e.showQueryStringEditor=!0}},when:function(){return e["new"].searchParams.entries.length>0&&n}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-image-relative-path",["LinkObject",function(e){return{title:"Linked image URL is relative",description:"The image is probably stored on your computer     somewhere or the image is broken.     Images in emails should only be referenced by absolute URLs.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return e.LinkedImage&&!/^http/.test(e.LinkedImage.src)}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-image-size",["LinkObject",function(e){var i,n,t=!1;return e.LinkedImage&&e.LinkedImage.width&&e.LinkedImage.height&&(i=e.LinkedImage.width,n=e.LinkedImage.height,(parseInt(e.LinkedImage.width)<44||parseInt(e.LinkedImage.height)<44)&&(t=!0)),{title:"Linked image might be too small",description:(t?"The linked image is <strong>"+i+"x"+n+"px</strong>. ":"")+"Generally, youâ€™ll want to keep calls-to-action big enough for even large thumbs to easily tap.     Apple suggests making touch targets at least 44 pixels square.     Smaller images may be a problem for touch screen devices, particularly those with high screen resolutions.",type:ErrorType.BestPractice,severity:ErrorSeverity.High,resource:"https://www.lukew.com/ff/entry.asp?1085",canContinue:!0,when:function(){return t}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-is-valid-mailto",["LinkObject",function(e){return{title:"Invalid email address",description:"Fix invalid email address.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return e.isLinkType("mailto")&&e.mailto.has("email")&&!e.mailto.isValidEmailAddress()}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-is-valid-url",["LinkObject",function(e){return{title:"Invalid URL",description:"This is not a valid URL",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return!e.isLinkType("mailto")&&!e["new"].isValid()}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-jump-links",["LinkObject",function(e){return{title:"Jumplinks in Emails",description:"It looks like you're trying to send traffic to a\n    <em>Jump link</em> AKA <em>Anchor link</em>. The only\n    time that is acceptible is when the destination is on\n    the same page. You see, the assumption is that all the content is\n    loaded, but when you click from an email into another page with a\n    jump link, you're sending someone to a loading page. The page may or\n    may not send them to the location you're intending, or there\n    may be an awkward user experience.",type:ErrorType.Suggestion,severity:ErrorSeverity.Low,canContinue:!0,cta:{label:'<i class="wizard icon"></i> Fix it',handler:function(){e["new"].hash="",e.isLinkComplete(),window.ga("send","event","Suggestion","Remove Anchor Link","Remove Anchor Link")}},when:function(){return""!==e["new"].hash&&"#"!==e["new"].hash}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-mailto-link-matches-context",["LinkObject",function(e){return{title:"Looks like your label doesn't match the email address.",description:"It looks like you have a link to an email address that does not match the link label. This is misleading and could be confusing, so you need to make sure that they match.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:'<i class="wizard icon"></i>Update label',handler:function(){e.context=e.context.replace(/\>(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))\<\//g,">"+e.mailto.email+"</"),e._super.overriddenIds.indexOf("custom-confrim-contact-email-addresses")>-1&&e._super.overriddenIds.splice(e._super.overriddenIds.indexOf("custom-confrim-contact-email-addresses"),1),e.isLinkComplete(),e._super.intelligence.checkEmail(),window.ga("send","event","Fix","Update label",e._super._defaultSCode)}},when:function(){return e.isLinkType("mailto")&&function(){var i=window.jQuery(e.context).text().trim();return i.indexOf("@")>-1&&e.mailto.email!==i.substr(0,e.mailto.email.length)}()}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-mailto-subject-line",["LinkObject",function(e){return{title:"Always include a subject line.",description:"You can add a subject line using the Editor button.",type:ErrorType.BestPractice,severity:ErrorSeverity.Medium,canContinue:!0,cta:{label:'<i class="wizard icon"></i> Open Editor',handler:function(){e.mailto.openEditor(),window.ga("send","event","Best Practice","Add subject line","Add subject line")}},when:function(){return e.isLinkType("mailto")&&!e.mailto.has("subject")}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-missing-content",["LinkObject",function(e){var i=!(0!=window.jQuery(e.context).find("img").length||""!=window.jQuery(e.context).text().trim()||e.hasOwnProperty("deleteOnRender")&&e.deleteOnRender);return{title:"Missing content",description:"This link doesn't contain any text or image.\n    This might be a mistake; you can remove it\n    from the code, or by clicking the button to the\n    right, and this link will be removed when you export the code.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:'<i class="trash icon"></i> Remove link',handler:function(){e["new"].url="",e.deleteOnRender=!0,e.isLinkComplete()}},when:function(){return i}}}]),EMLIntelligence.module("hyperlink").register("hyperlink-remove-title-tag",["LinkObject",function(e){return{title:"Remove title tag",description:"Links in emails shouldn't use title tags. This causes issues with accessibility for screen readers, but also can misrepresent links.",type:ErrorType.BestPractice,severity:ErrorSeverity.Medium,canContinue:!0,when:function(){return GlobalVars.LinkHasTitleTagRegexGlobal.test(e.context)}}}]);
//# sourceMappingURL=data:application/json;base64,
