function __PreviewTextEvalFuncs(){}function __CustomPhoneNumberQA(){this.storedValues="eyJldmVudHNAb3B0dW0uY29tIjoiODAwLjc2NS42NzU5IiwiaW5mb0BvcHR1bS5jb20iOiI4NjYuMzg2LjM0MDQiLCJ2aWV3cG9pbnRzQG9wdHVtLmNvbSI6IjgwMC43NjUuNjcwNSIsImlxQG9wdHVtLmNvbSI6IjgwMC43NjUuNjcwNSIsImVtcG93ZXJAb3B0dW0uY29tIjoiODAwLjc2NS42ODA3Iiwib3B0dW0zNjBAb3B0dW0uY29tIjoiODY2LjIyMy40NzMwIiwiaW5mb3JtQG9wdHVtLmNvbSI6IjgwMC43NjUuNjc5MyIsImRpc2NvdmVyQG9wdHVtLmNvbSI6IjgwMC43NjUuNjYxOSIsImNvbm5lY3RlZEBvcHR1bS5jb20iOiI4NjYuMzA2LjEzMjEiLCJpbm5vdmF0ZUBvcHR1bS5jb20iOiI4MDAuNzY1LjYwOTIiLCJlbmdhZ2VAb3B0dW0uY29tIjoiODY2LjM4Ni4zNDA5IiwiaW5nZW51aXR5QG9wdHVtLmNvbSI6Ijg2Ni40MjcuNjgwNCIsImdsb2JhbEBvcHR1bS5jb20iOiI4NjYuMzIyLjA5NTgiLCJvcHR1bXJ4QG9wdHVtLmNvbSI6Ijg2Ni4zODYuMzQwNCJ9",this.data=JSON.parse(window.atob(this.storedValues))}__PreviewTextEvalFuncs.prototype.lowerToCapitalsRatio=function(e){var t=e.length-e.replace(/[A-Z]/g,"").length,i=e.length-e.replace(/[a-z]/g,"").length;return t/(i+t)},__PreviewTextEvalFuncs.prototype.evaluateParagraphText=function(e){return!(e.indexOf("web version")>-1)&&(""!=e&&(!(e.length<70)&&(e!==e.toUpperCase()&&(this.lowerToCapitalsRatio(e)<=.1||void 0))))};var PreviewTextEvalFuncs=new __PreviewTextEvalFuncs;EMLMaker.intelligence.module("email").register("email-has-preheader",["EMLWorkspace",function(e){function t(e){var t,i="",n=/\<p([^\>]|\s|.*)\>([^<].*)?\<\/p\>/gi,r=[];do t=n.exec(e),t&&r.push(t[0]);while(t);for(var o=0;o<r.length;o++){var a=document.createElement("div");a.innerHTML=r[o];var s=a.textContent||a.innerText||"";if(PreviewTextEvalFuncs.evaluateParagraphText(s)){i=s;break}}return i.split(".").shift()+"."}var i=!0,n={title:"",msg:"",type:ErrorType.BestPractice,severity:ErrorSeverity.Low,canContinue:!0,cta:{},suggestion:""},r=e.generateOutputCode("email",!0),o=/\<p.*class=\"preheader\"[^\>].*\>([^<].*)?\<\/p\>/gi,a=/\<p([^\>].*)class=\"preheader\"([^\>].*)\>/gi;if(a.test(r)){var s=r.match(o);if(s){var l=window.jQuery(s[0]),c=l.text();if(0==c.length){n.title="Preview text - Code incomplete",n.type=ErrorType.Fix,n.severity=ErrorSeverity.High,n.msg="Code is present but there is no text set. Consider adding some, or removing the preview text code block from the HTML if you plan on using the preview text feature in Eloqua.";var u=t(r);""!==u&&(n.suggestion=u,n.cta={label:"Fix now",handler:function(){e.workingCode=e.workingCode.replace(o,function(e){return e.replace("</p>",u+"</p>")}),e.intelligence.evaluateRules()}})}else n.title="Preview text - Found",n.msg="<em>Found:</em> "+l.text()}else{n.title="Preview text - Code might be broken",n.msg="Preview text looks like it might be broken.",n.type=ErrorType.Fix,n.severity=ErrorSeverity.High,n.canContinue=!1;var d=t(r);""!==d&&(n.msg=n.msg+"Consider fixing the code and updating this preview text to some content from the email.",n.suggestion=d,n.cta={label:"Fix now",handler:function(){e.workingCode=e.workingCode.replace(a,function(e){return e+d+"</p>"}),e.intelligence.evaluateRules()}})}i=!1}return{id:"email-has-preheader",title:n.title,description:n.msg,type:n.type,severity:n.severity,suggestion:n.suggestion,canContinue:n.canContinue,cta:n.cta?n.cta:{},when:function(){return!i}}}]);var CustomPhoneNumberQA=new __CustomPhoneNumberQA;EMLMaker.intelligence.module("email").register("email-qa-telelphone-numbers",["EMLWorkspace","IntelligenceMonitor",function(e,t){var i=e.generateOutputCode("email",!0),n=[],r=[],o=[];if(GlobalVars.EmailRegex.test(i)){var a;do a=GlobalVars.EmailRegexGlobal.exec(i),a&&n.indexOf(a[0])==-1&&n.push(a[0]);while(a);for(var s=0;s<n.length;s++)CustomPhoneNumberQA.data[n[s]]&&r.push(n[s]+' <i class="ui long right arrow icon"></i> '+CustomPhoneNumberQA.data[n[s]])}var o=[];if(GlobalVars.TelephoneRegex.test(i)){var a;do a=GlobalVars.TelephoneRegexGlobal.exec(i),a&&o.push(a[0]);while(a)}return{id:"confrim-telephone-numbers",title:"Confirm correct contact information - Telephone Number"+(o.length>1?"s":""),description:"<em>Found:</em> "+o.join(", "),type:ErrorType.QA,severity:ErrorSeverity.Medium,canContinue:!1,suggestion:0==r.length?"":r.join("<br>"),cta:{label:"",handler:function(){t.overridden.push("confrim-telephone-numbers"),e.intelligence.evaluateRules()}},when:function(){return o.length>0}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-click-here-ctas",["LinkObject",function(e){return{title:'"Click here" is a bad practice.',description:'"Click here" links aren\'t really descriptive\n    enough to be effective CTAs. Additionally, click implies that users\n    are using a mouse, which is more than half the time not the case when\n    you consider mobile devices and others reading for accessibility.',type:ErrorType.Warn,severity:ErrorSeverity.Low,resource:"https://www.campaignmonitor.com/blog/email-marketing/2016/03/75-call-to-actions-to-use-in-email-marketing-campaigns/",canContinue:!0,when:function(){return e.context&&/click|click\shere/g.test(e.context)}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-click-here-ctas",["LinkObject",function(e){var t=/\%|act|app|be\s|benefit|best|bird|book|brief|buy|change|claim|collection|coming|complete|connected|count|coupon|curious|deal|delay|don(\'|’)t|donate|download|e\-book|early|ebook|fall|favorites|feedback|find|follow|free|full|get|gift|give|hear|how|insight|keep|know|learn|leave|let|like|make|more|next|now|order|pay|prices|purchase|read|register|repeat|reserve|result|reveal|review|save|saving|season|seat|see|shop|sign|spot|spread|start|stay|survey|take|tickets|today|trial|upgrade|video|vip|want|watch|webinar|white\spaper/i,i=window.jQuery(e.context),n=t.test(i.text())&&i.text().length>45;return{title:"CTA might be too long.",description:"Instead, keep your calls to action short and sweet.\n    Readers prefer quick, direct action items, not lengthy sentences.",type:ErrorType.Warn,severity:ErrorSeverity.Low,resource:"https://www.campaignmonitor.com/blog/email-marketing/2016/03/75-call-to-actions-to-use-in-email-marketing-campaigns/",canContinue:!0,when:function(){return n}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-descriptive-ctas",["LinkObject",function(e){var t=/\%|act|app|be\s|benefit|best|bird|book|brief|buy|change|claim|collection|coming|complete|connected|count|coupon|curious|deal|delay|don(\'|’)t|donate|download|e\-book|early|ebook|fall|favorites|feedback|find|follow|free|full|get|gift|give|hear|how|insight|keep|know|learn|leave|let|like|make|more|next|now|order|pay|prices|purchase|read|register|repeat|reserve|result|reveal|review|save|saving|season|seat|see|shop|sign|spot|spread|start|stay|survey|take|tickets|today|trial|upgrade|video|vip|want|watch|webinar|white\spaper/i,i=/privacy|refund|protected|secure|certified|guaranteed|realistic|researched|proven|official|money-back|tested|lifetime|backed/i,n=/easy|simple|hassle\-free|help|complete|entire|total|thorough|pure|natural|plain|straightforward|uncomplicated|candid/i,r=/increase|create|share|discover|compare|take|show|tell|find|make|plan|learn|start|grow/i,o=/select|private|confidential|insider|vip|secret|exclusive|members|elite|invitation|secret|reserved|only|choice/i,a=/now|immediately|today|limited|shortly|soon|rapid|quick|flash|hurry|alert|fast|instant|urgent/i,s=/new|introducing|latest|special|alert|gift|free|freebie|best|prize|win|save|ultimate|try/i,l=window.jQuery(e.context),c=l.text(),u=[0,0,0,0,0,0];i.test(c)&&(console.log("security"),u[0]=1),n.test(c)&&(console.log("simplicity"),u[1]=1),r.test(c)&&(console.log("engagement"),u[2]=1),o.test(c)&&(console.log("exclusive"),u[3]=1),a.test(c)&&(console.log("urgency"),u[4]=1),s.test(c)&&(console.log("excitement"),u[5]=1);var d=t.test(l.text())&&l.text().length>45;return{title:"Consider the language of the CTA",description:"",type:ErrorType.Warn,severity:ErrorSeverity.Low,resource:"https://www.campaignmonitor.com/resources/guides/10-tips-improve-email-calls-action/",canContinue:!0,when:function(){return d}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-has-spaces",["LinkObject",function(e){return{title:"This link has spaces",description:"Stuff like this breaks. Fix it now.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:"Remove spaces",handler:function(){e["new"].url=e["new"].url.replace(/\s/g,"%20"),e.isLinkComplete()}},when:function(){return e["new"].contains(" ")}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-is-ics",["LinkObject","IntelligenceMonitor","EMLWorkspace",function(e,t,i){return{id:"confrim-calendar-file-is-correct",title:"Confirm correct details - Calendar file",description:"Confirm that date, time, location, timezone and description are correct.",type:ErrorType.QA,severity:ErrorSeverity.High,resource:e["new"].url,resourceText:"Open file",canContinue:!1,cta:{handler:function(){t.overridden.push("confrim-calendar-file-is-correct"),e.isLinkComplete(),i.intelligence.evaluateRules()}},when:function(){return/(\.ics|\.vcs)$/g.test(e["new"].url)}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-landing-page-preferred",["LinkObject",function(e){var t=GlobalVars.landingPagePreferred.test(e["new"].url);if(t){var i=e["new"].url.match(GlobalVars.landingPagePreferred);if(i.length>0)var n=i[0].toUpperCase().substr(1,i[0].length)}return{title:"Landing page preferred",description:["When you direct email ","traffic to ",/^[aeiouAEIOU]/gi.test(n)?"an ":"a ",n,", it's generally a good idea to serve the ",n," on"," a landing page with more information about the asset. This will also ","give you more analytics data, like session/visit duration and promote ","browsing other content."].join(""),type:ErrorType.BestPractice,severity:ErrorSeverity.High,canContinue:!0,when:function(){return t}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-no-shortlinks",["LinkObject",function(e){return{title:"Don't use shortlinks or vanity URLs in emails",description:"Always use the long link. Adding query string parameter to a vanity     url inside an email will not track appropriately.",type:e["new"].contains("optum.co")?ErrorType.Fix:ErrorType.BestPractice,severity:ErrorSeverity.High,canContinue:!e["new"].contains("optum.co"),when:function(){return/.com?(\.[a-z]{2,3})?\/([a-zA-Z0-9\-]+)\/*(\?.*)?$/.test(e["new"].url.trim())&&!e["new"].contains("info.optum")&&!/(twitter|linkedin|facebook|youtube)\.com?/.test(e["new"].url)}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-ofts-dont-use",["LinkObject",function(e){return{title:"We don't link to OFTs in emails we send.",description:"You should not be sending OFTs to external contacts.    OFTs only work with Outlook on PCs, and that is less     than half of the population of email clients these days.",type:ErrorType.BestPractice,severity:ErrorSeverity.High,canContinue:!0,when:function(){var t=e["new"].url.indexOf(".oft")>-1;return t}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-ofts-implement-ftac",["LinkObject",function(e){return{title:"Forward to a colleague?",description:"If you are trying to do a Forward to a Colleague (FTAC)   feature, forget doing that with an OFT. You can achieve    the same effect by using a mailto link. <br><br><em>NOTE:     You can leave the email address field blank for this one.      When the user clicks the link the email field will be empty,       so he/she can add their own recipients.</em>",type:ErrorType.Suggestion,severity:ErrorSeverity.Low,canContinue:!0,cta:{label:'<i class="wizard icon"></i> Try it?',handler:function(){e.mailto.email="",e.mailto.subject="I wanted you to see this",e.mailto.body="Check out this link\n\nhttps://www.yourlinkgoeshere.com",e.mailto.composeEmail(),e.mailto.initEmailEditor(),e.mailto.openEditor(),e.isLinkComplete(),window.ga("send","event","Suggestion","Use FTAC","Use FTAC")}},when:function(){return e["new"].url.indexOf(".oft")>-1}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-relative-path",["LinkObject",function(e){return{title:"This URL is not correct.",description:"/content/optum3/en/ is only for use in author in AEM, not on the live site.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,when:function(){return/http(.*)\/content\/optum(.*)\.html/gi.test(e["new"].url)}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-style-matters",["LinkObject",function(e){return{title:"Style matters",description:"You should not put punctuation inside of a link unless it is a button, and even then it's a little weird.",type:ErrorType.BestPractice,severity:ErrorSeverity.Medium,canContinue:!0,cta:{label:"Move the punctuation",handler:function(){e.context=e.context.replace(GlobalVars.linkEncapsulatedPunctuation,"</a>$1"),e.isLinkComplete()}},when:function(){return GlobalVars.linkEncapsulatedPunctuation.test(e.context)}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-tracking-add-all",["LinkObject",function(e){var t=!1;return e.requiresTrackingCode()&&e.hasTrackingCode()&&e._super.mapLinkObjects(function(e){e.requiresTrackingCode()&&!e.hasTrackingCode()&&(t=!0)}),{title:"Need a hand?",description:"I noticed you added a tracking code to this link, great job.     If you want I can add the same tracking code to the other links in this email      which require tracking codes.",type:ErrorType.Suggestion,severity:ErrorSeverity.Low,canContinue:!0,cta:{label:'<i class="wizard icon"></i> Update all links',handler:function(){var t="";e["new"].searchParams.entries.forEach(function(i){e.hasTrackingCode(i)&&(t=i)}),e._super.mapLinkObjects(function(e){e.requiresTrackingCode()&&!e.hasTrackingCode()&&e["new"].searchParams.append(t)}),e._super.mapLinkObjects(function(e){e.isLinkComplete()}),window.ga("send","event","Suggestion","Cascade Tracking Code","Cascade Tracking Code")}},when:function(){return t}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-tracking-not-required",["LinkObject",function(e){var t=/^[aeiouAEIOU]/gi.test(n)?"an ":"a "+n,i=e["new"].url.match(GlobalVars.extDoesNotrequireTrackingCode);if(i&&i.length>0)var n=i[0].toUpperCase().substr(1,i[0].length),t=/^[aeiouAEIOU]/gi.test(n)?"an ":"a "+n;return{title:"Unnecessary tracking link",description:"It looks like you added a tracking code to "+t+" file.\n    In fact, you can only track web pages with these tracking codes.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:'<i class="wizard icon"></i>Fix it now',handler:function(){for(var t=0;t<e["new"].searchParams.entries.length;t++)/[a-z]{1,4}=(.*?:){3,9}/gi.test(e["new"].searchParams.entries[t])&&e["new"].searchParams.deleteAtIndex(t),window.ga("send","event","Suggestion","Unnecessary tracking code","Remove Tracking Code");e["new"].searchParams.updateEntries(),e.isLinkComplete()}},when:function(){return GlobalVars.extDoesNotrequireTrackingCode.test(e["new"].url)&&e.hasTrackingCode()}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-tracking-required",["LinkObject",function(e){return{id:"optum-budurl-tracking-code-required",title:"This URL needs a tracking code.",description:"Create and add one to make this message go away.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:'<i class="unlock alternate icon"></i> Do not track link',handler:function(){e.overrideTrackingRequirements(),e.isLinkComplete()}},when:function(){return e.whiteListedUrl!==e["new"].url&&e.needsTrackingCode()&&!e["new"].contains("optum.co/")}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-tracking-s-code",["LinkObject",function(e){return{title:"Are you tracking channel source with your form?",description:"If this link directs to a page with a form, consider adding      an s-code to the URL so you can populate a form field with       a value from the query string to track the channel source        of the form submission.<br><br><em>NOTE: You can change         the value of the s-code to whatever you'd like, but we'll          add the <code>s=email</code> by default.</em>",type:ErrorType.Suggestion,severity:ErrorSeverity.Low,cta:{label:'<i class="wizard icon"></i>Add S-Code',handler:function(){e["new"].searchParams.append("s=email"),e.isLinkComplete(),window.ga("send","event","Suggestion","Add s-code","s=email")}},when:function(){var t=e.requiresSCode(),i=e["new"].searchParams.has("s"),n=t&&!i;return n&&!i}}}]),EMLMaker.intelligence.module("hyperlink").register("hyperlink-v-equals",["LinkObject",function(e){return{title:"V= cannot be used in emails.",description:"This query string parameter is reserved for vanity urls, and should never be used in an email.",type:ErrorType.Fix,severity:ErrorSeverity.High,canContinue:!1,cta:{label:"Remove parameter",handler:function(){e["new"].searchParams["delete"]("v"),e.isLinkComplete()}},when:function(){return e["new"].searchParams.has("v")}}}]);
//# sourceMappingURL=data:application/json;base64,
